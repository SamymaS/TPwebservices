{
  "info": {
    "name": "Ynov Express - Auth Complete",
    "description": "Collection compl√®te avec authentification JWT et tests automatiques",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_exporter_id": "ynov-2025"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "{{baseUrl}}",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "0. Health Check",
      "item": [
        {
          "name": "Health Check",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('‚úÖ Health check OK', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const json = pm.response.json();",
                  "    pm.expect(json.success).to.be.true;",
                  "    pm.expect(json.status).to.eql('ok');",
                  "    console.log('üè• API Status:', json.message);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/health",
              "host": ["{{baseUrl}}"],
              "path": ["health"]
            }
          }
        }
      ]
    },
    {
      "name": "1. Authentication",
      "item": [
        {
          "name": "Generate User Token",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('‚úÖ Token user g√©n√©r√©', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const json = pm.response.json();",
                  "    pm.expect(json.success).to.be.true;",
                  "    pm.expect(json.access_token).to.be.a('string');",
                  "    ",
                  "    // Sauvegarder le token",
                  "    pm.environment.set('authToken', json.access_token);",
                  "    pm.environment.set('tokenExpiry', json.expires_at);",
                  "    ",
                  "    console.log('üîë Token user sauvegard√©');",
                  "    console.log('üë§ User:', json.user.email, '- Role:', json.user.role);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"userId\": \"{{userId}}\",\n  \"email\": \"{{userEmail}}\",\n  \"role\": \"user\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/generate-token",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "generate-token"]
            }
          }
        },
        {
          "name": "Generate Admin Token",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('‚úÖ Token admin g√©n√©r√©', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const json = pm.response.json();",
                  "    pm.expect(json.success).to.be.true;",
                  "    pm.expect(json.user.role).to.eql('admin');",
                  "    ",
                  "    // Sauvegarder le token admin",
                  "    pm.environment.set('adminToken', json.access_token);",
                  "    ",
                  "    console.log('üëë Token admin sauvegard√©');",
                  "    console.log('üë§ Admin:', json.user.email);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"userId\": \"{{adminId}}\",\n  \"email\": \"{{adminEmail}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/generate-admin-token",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "generate-admin-token"]
            }
          }
        },
        {
          "name": "Verify Token",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('‚úÖ Token valide', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const json = pm.response.json();",
                  "    pm.expect(json.success).to.be.true;",
                  "    pm.expect(json.valid).to.be.true;",
                  "    console.log('‚úì Token v√©rifi√© - Expire dans:', json.expiresIn, 'secondes');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/auth/verify",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "verify"]
            }
          }
        },
        {
          "name": "Get User Info (Me)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('‚úÖ Info utilisateur r√©cup√©r√©es', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const json = pm.response.json();",
                  "    pm.expect(json.success).to.be.true;",
                  "    console.log('üë§ User ID:', json.user.id);",
                  "    console.log('üìß Email:', json.user.email);",
                  "    console.log('üé≠ Role:', json.user.role);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/auth/me",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "me"]
            }
          }
        },
        {
          "name": "Refresh Token",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('‚úÖ Token rafra√Æchi', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const json = pm.response.json();",
                  "    pm.expect(json.success).to.be.true;",
                  "    pm.environment.set('authToken', json.access_token);",
                  "    console.log('üîÑ Nouveau token sauvegard√©');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/auth/refresh",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "refresh"]
            }
          }
        }
      ]
    },
    {
      "name": "2. Admin - Setup",
      "item": [
        {
          "name": "Admin - Health Check",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('‚úÖ Admin API OK', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const json = pm.response.json();",
                  "    pm.expect(json.success).to.be.true;",
                  "    console.log('üîß', json.message);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/admin/health",
              "host": ["{{baseUrl}}"],
              "path": ["api", "admin", "health"]
            }
          }
        },
        {
          "name": "Admin - Diagnostics",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('‚úÖ Diagnostics r√©ussis', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const json = pm.response.json();",
                  "    pm.expect(json.success).to.be.true;",
                  "    console.log('üìä Tables:', JSON.stringify(json.database.tables, null, 2));",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/admin/diagnostics",
              "host": ["{{baseUrl}}"],
              "path": ["api", "admin", "diagnostics"]
            }
          }
        },
        {
          "name": "Admin - Reset",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('‚úÖ Reset r√©ussi', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const json = pm.response.json();",
                  "    pm.expect(json.success).to.be.true;",
                  "    console.log('üóëÔ∏è', json.message);",
                  "    console.log('Supprim√©s:', JSON.stringify(json.deletedCounts, null, 2));",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/admin/reset",
              "host": ["{{baseUrl}}"],
              "path": ["api", "admin", "reset"]
            }
          }
        },
        {
          "name": "Admin - Seed",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('‚úÖ Seed r√©ussi', function () {",
                  "    pm.response.to.have.status(201);",
                  "    const json = pm.response.json();",
                  "    pm.expect(json.success).to.be.true;",
                  "    console.log('üå±', json.message);",
                  "    console.log('Cr√©√©s:', JSON.stringify(json.created, null, 2));",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/admin/seed",
              "host": ["{{baseUrl}}"],
              "path": ["api", "admin", "seed"]
            }
          }
        },
        {
          "name": "Admin - Generate Posts",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('‚úÖ Posts g√©n√©r√©s', function () {",
                  "    pm.response.to.have.status(201);",
                  "    const json = pm.response.json();",
                  "    pm.expect(json.success).to.be.true;",
                  "    console.log('‚ú®', json.message);",
                  "    console.log('G√©n√©r√©s:', JSON.stringify(json.generated, null, 2));",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"count\": 5\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/admin/generate",
              "host": ["{{baseUrl}}"],
              "path": ["api", "admin", "generate"]
            }
          }
        }
      ]
    },
    {
      "name": "3. Posts (Public)",
      "item": [
        {
          "name": "Get All Posts",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('‚úÖ Posts r√©cup√©r√©s', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const json = pm.response.json();",
                  "    pm.expect(json).to.be.an('array');",
                  "    ",
                  "    if (json.length > 0) {",
                  "        pm.environment.set('postId', json[0].id);",
                  "        console.log('üìù Posts trouv√©s:', json.length);",
                  "        console.log('üÜî Premier post ID sauvegard√©:', json[0].id);",
                  "    }",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/posts",
              "host": ["{{baseUrl}}"],
              "path": ["api", "posts"]
            }
          }
        },
        {
          "name": "Get Published Posts Only",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('‚úÖ Posts publi√©s r√©cup√©r√©s', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const json = pm.response.json();",
                  "    pm.expect(json).to.be.an('array');",
                  "    console.log('üì∞ Posts publi√©s:', json.length);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/posts?is_published=true",
              "host": ["{{baseUrl}}"],
              "path": ["api", "posts"],
              "query": [
                {
                  "key": "is_published",
                  "value": "true"
                }
              ]
            }
          }
        },
        {
          "name": "Get Post by ID",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('‚úÖ Post r√©cup√©r√©', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const json = pm.response.json();",
                  "    pm.expect(json.id).to.be.a('string');",
                  "    console.log('üìÑ Post:', json.title);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/posts/{{postId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "posts", "{{postId}}"]
            }
          }
        }
      ]
    },
    {
      "name": "4. Posts (Protected)",
      "item": [
        {
          "name": "Create Post",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('‚úÖ Post cr√©√©', function () {",
                  "    pm.response.to.have.status(201);",
                  "    console.log('‚úçÔ∏è Post cr√©√© avec succ√®s');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Mon post de test\",\n  \"content\": \"Ceci est le contenu de mon post cr√©√© via Postman avec authentification JWT\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/posts",
              "host": ["{{baseUrl}}"],
              "path": ["api", "posts"]
            }
          }
        },
        {
          "name": "Update Post",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('‚úÖ Post mis √† jour', function () {",
                  "    pm.response.to.have.status(200);",
                  "    console.log('üìù Post modifi√©');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Post mis √† jour\",\n  \"content\": \"Contenu modifi√©\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/posts/{{postId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "posts", "{{postId}}"]
            }
          }
        },
        {
          "name": "Publish Post",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('‚úÖ Post publi√©', function () {",
                  "    pm.response.to.have.status(204);",
                  "    console.log('üì¢ Post publi√©');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/posts/{{postId}}/publish",
              "host": ["{{baseUrl}}"],
              "path": ["api", "posts", "{{postId}}", "publish"]
            }
          }
        }
      ]
    },
    {
      "name": "5. Comments",
      "item": [
        {
          "name": "Get Comments",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('‚úÖ Commentaires r√©cup√©r√©s', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const json = pm.response.json();",
                  "    pm.expect(json).to.be.an('array');",
                  "    if (json.length > 0) {",
                  "        pm.environment.set('commentId', json[0].id);",
                  "        console.log('üí¨ Commentaires:', json.length);",
                  "    }",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/posts/{{postId}}/comments",
              "host": ["{{baseUrl}}"],
              "path": ["api", "posts", "{{postId}}", "comments"]
            }
          }
        },
        {
          "name": "Create Comment",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('‚úÖ Commentaire cr√©√©', function () {",
                  "    pm.response.to.have.status(201);",
                  "    const json = pm.response.json();",
                  "    if (json && json.length > 0) {",
                  "        pm.environment.set('commentId', json[0].id);",
                  "    }",
                  "    console.log('üí¨ Commentaire ajout√©');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"content\": \"Super article ! Merci pour le partage üöÄ\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/posts/{{postId}}/comments",
              "host": ["{{baseUrl}}"],
              "path": ["api", "posts", "{{postId}}", "comments"]
            }
          }
        }
      ]
    },
    {
      "name": "6. Likes",
      "item": [
        {
          "name": "Get Likes",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('‚úÖ Likes r√©cup√©r√©s', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const json = pm.response.json();",
                  "    pm.expect(json).to.be.an('array');",
                  "    if (json.length > 0) {",
                  "        pm.environment.set('likeId', json[0].id);",
                  "    }",
                  "    console.log('‚ù§Ô∏è Likes:', json.length);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/posts/{{postId}}/likes",
              "host": ["{{baseUrl}}"],
              "path": ["api", "posts", "{{postId}}", "likes"]
            }
          }
        },
        {
          "name": "Get Likes Count",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('‚úÖ Compteur likes OK', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const count = pm.response.json();",
                  "    console.log('‚ù§Ô∏è Total likes:', count);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/posts/{{postId}}/likes-count",
              "host": ["{{baseUrl}}"],
              "path": ["api", "posts", "{{postId}}", "likes-count"]
            }
          }
        },
        {
          "name": "Add Like",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('‚úÖ Like ajout√©', function () {",
                  "    pm.response.to.have.status(201);",
                  "    const json = pm.response.json();",
                  "    if (json && json.length > 0) {",
                  "        pm.environment.set('likeId', json[0].id);",
                  "    }",
                  "    console.log('‚ù§Ô∏è Like ajout√©');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/posts/{{postId}}/likes",
              "host": ["{{baseUrl}}"],
              "path": ["api", "posts", "{{postId}}", "likes"]
            }
          }
        }
      ]
    }
  ]
}

